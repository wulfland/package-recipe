name: CI

on:
    pull_request:
    push:
      branches:
        - main

jobs:
  build:
    permissions:
        pull-requests: write
        security-events: write
    env:
      MAIN_VERSION: "21.x"

    strategy:
      matrix:
        node-version: ["21.x", "20.x"]
    
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          check-latest: true

      - name: Get npm cache directory
        id: npm-cache-dir
        run: echo "dir=$(npm config get cache)" >> "${GITHUB_OUTPUT}"

      - uses: actions/cache@v3
        id: npm-cache
        with:
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: List the state of node modules
        if: ${{ steps.npm-cache.outputs.cache-hit != 'true' }}
        continue-on-error: true
        run: npm list

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm test
  
      - name: Prepare coverage report in markdown
        uses: fingerprintjs/action-coverage-report-md@v1.0.6
        id: coverage
        with:
          textReportPath: coverage/coverage.txt

      - name: Add coverage comment to the PR 
        uses: marocchino/sticky-pull-request-comment@v2.8.0
        with:
          message: ${{ steps.coverage.outputs.markdownReport }}

      - name: Add coverage report to the job summary
        run: |
          echo "## Code Coverage v${{ matrix.node-version }}" >> "$GITHUB_STEP_SUMMARY"
          echo "${{ steps.coverage.outputs.markdownReport }}" >> "$GITHUB_STEP_SUMMARY"

      - name: Upload page artifacts
        if: ${{ matrix.node-version == env.MAIN_VERSION }}
        uses: actions/upload-pages-artifact@v3
        with:
          path: coverage 

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: 'javascript-typescript'
          queries: security-and-quality

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:javascript-typescript"

  deploy:
    if: ${{ github.ref == 'refs/heads/main' }}
    needs: build
    runs-on: ubuntu-latest
    concurrency:
      group: "pages"
      cancel-in-progress: false
    
    permissions:
        contents: read
        pages: write
        id-token: write

    environment:
      name: github-pages
      url: "${{ steps.deployment.outputs.page_url }}lcov-report"

    steps:
      - name: Setup Pages
        uses: actions/configure-pages@v4
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  publish:
    if: ${{ github.ref == 'refs/heads/main' }}
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    
    steps:
      - uses: actions/checkout@v4
        with: 
          fetch-depth: 0

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.10.2
        with:
          versionSpec: '5.x'
          
      - name: Determine Version
        uses: gittools/actions/gitversion/execute@v0.10.2
        with:
          useConfigFile: true
     
      # If we use a token or app instead of the GITHUB_TOKEN, the release
      # would trigger the other workflow. As we are using the GITHUB_TOKEN
      # we manually have to publish the package.
      # In a real-world scenario we would put the logic in a reusable workflow or
      # composite action.
      - name: Create a new release
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          gh api \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            /repos/wulfland/package-recipe/dependency-graph/sbom > sbom.json
          gh release create ${{ env.GITVERSION_SEMVER }} --generate-notes
          gh release upload ${{ env.GITVERSION_SEMVER }} sbom.json --clobber
    
      - uses: actions/setup-node@v4
        with:
          node-version: 21.x
          registry-url: https://npm.pkg.github.com/

      - name: 'Change NPM version'
        uses: reedyuk/npm-version@1.2.2
        with:
          version: $GITVERSION_SEMVER
  
      - name: Install dependencies
        run: npm install
    
      - name: Run tests
        run: npm test
            
      - name: Publish package 
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}
